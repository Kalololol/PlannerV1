@page "/employeeedit/{id:int}"
@using Planner.Application.Service.Queries
@inject AutoMapper.IMapper _mapper
@inject MediatR.IMediator _mediator
@using Planner.Application.Service.Command


<h3>EmployeeEdit</h3>

<EditForm Model="@employee" OnValidSubmit="@OnInitializedAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <td>Imię: </td>
    <InputText id="name" @bind-Value="employee.Name" required/>
    <br/>
    <td>Nazwisko: </td>
    <InputText id="surname" @bind-Value="employee.Surname" required/>
    <br/>
    <td>Adres e-mail: </td>
    <InputText id="addressemail" @bind-Value="employee.AddressEmail" required/>
    <br/>
    <td>Telefon: </td>
    <InputText id="phonenumber" @bind-Value="employee.PhoneNumber" required/>
    <br/>
    <td>Prawo wyk. zawodu: </td>
    <InputText id="licensenumber" @bind-Value="employee.LicenseNumber" required/>
    <br/>
    <td>Hasło: </td>
    <InputText id="password" @bind-Value="employee.Password" required/>
    <br/>
    <br/>
    <button type="submit" @onclick="EditEmployee">Zatwierdź zmiany</button>
</EditForm>


@code {
    [Parameter]
    public int Id { get; set; }

    private DetailsEmployee employee;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        var empl = await _mediator.Send(new GetEmployeeByIdQuery(Id));

        employee = _mapper.Map<DetailsEmployee>(empl);
    }

    private async Task EditEmployee()
    {
        employee.Id = Id;
        await _mediator.Send(_mapper.Map<EditEmployeeCommand>(employee));
    }


}
